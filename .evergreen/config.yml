# When a task that used to pass starts to fail
# Go through all versions that may have been skipped to detect
# when the task started failing
stepback: true

# Mark a failure as a system/bootstrap failure (purple box) rather then a task
# failure by default.
# Actual testing tasks are marked with `type: test`
command_type: system

# Protect ourself against rogue test case, or curl gone wild, that runs forever
# 12 minutes is the longest we'll ever run
exec_timeout_secs: 3600 # 12 minutes is the longest we'll ever run

# What to do when evergreen hits the timeout (`post:` tasks are run automatically)
timeout:
- command: shell.exec
  params:
    script: |
      ls -la

pre_error_fails_task: true
pre:
- command: git.get_project
  params:
    directory: src
- command: shell.exec
  params:
    working_dir: "src"
    script: |
      export PROJECT_DIRECTORY="$(pwd)"
      export MONGOCRYPT_LIB_DIR="$PROJECT_DIRECTORY/native/${libmongocrypt_os}/lib"
      export LD_LIBRARY_PATH="$MONGOCRYPT_LIB_DIR:$LD_LIBRARY_PATH"
      export DRIVERS_TOOLS="$(pwd)/../drivers-tools"

      cat <<EOT > expansion.yml
      PREPARE_SHELL: |
        set -o errexit
        set -o xtrace
        export PROJECT_DIRECTORY="$PROJECT_DIRECTORY"
        export MONGOCRYPT_LIB_DIR="$MONGOCRYPT_LIB_DIR"
        export LD_LIBRARY_PATH="$LD_LIBRARY_PATH"
        export DRIVERS_TOOLS="$DRIVERS_TOOLS"
      EOT
      cat expansion.yml
- command: expansions.update
  params:
    file: src/expansion.yml
- command: shell.exec
  params:
    working_dir: "src"
    script: |
      ${PREPARE_SHELL}
      .evergreen/install-dependencies.sh

functions:
  "compile only":
  - command: shell.exec
    type: test
    params:
      working_dir: "src"
      script: |
        ${PREPARE_SHELL}
        TARGET_DIR=${target_dir} .evergreen/compile-only.sh

  "run tests":
  - command: shell.exec
    type: test
    params:
      working_dir: "src"
      script: |
        ${PREPARE_SHELL}
        TARGET_DIR=${target_dir} .evergreen/run-tests.sh

tasks:
- name: "compile-only-sys"
  tags: ["compile", "sys"]
  commands:
  - func: "compile only"
    vars:
      target_dir: mongocrypt-sys

- name: "test-sys"
  tags: ["test", "sys"]
  commands:
  - func: "run tests"
    vars:
      target_dir: mongocrypt-sys

- name: "compile-only"
  tags: ["compile"]
  commands:
  - func: "compile only"
    vars:
      target_dir: mongocrypt

- name: "test"
  tags: ["test"]
  commands:
  - func: "run tests"
    vars:
      target_dir: mongocrypt

- name: "valgrind"
  tags: ["lint"]
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: "src"
      script: |
        ${PREPARE_SHELL}
        .evergreen/run-valgrind.sh

- name: "semgrep"
  tags: ["lint"]
  commands:
    - command: shell.exec
      type: test
      params:
        working_dir: "src"
        script: |
          ${PREPARE_SHELL}
          .evergreen/check-semgrep.sh

buildvariants:
- name: lint
  display_name: "Lint"
  run_on: ubuntu1804-test
  expansions:
    libmongocrypt_os: "ubuntu1804-64"
  tasks:
    - name: .lint

- name: compile
  display_name: "Compile"
  run_on: ubuntu1804-test
  expansions:
    libmongocrypt_os: "ubuntu1804-64"
  tasks:
    - name: .compile

- name: ubuntu
  display_name: "Ubuntu 18.04"
  run_on: ubuntu1804-test
  expansions:
    libmongocrypt_os: "ubuntu1804-64"
  tasks:
    # compilation on ubuntu is tested in the compile build variant
  - name: ".test"

- name: macos
  display_name: "MacOS 10.14"
  run_on: macos-1014
  expansions:
    libmongocrypt_os: "macos"
  tasks:
  - name: ".sys"
  - name: ".compile"

- name: windows
  display_name: "Windows (VS 2017)"
  run_on: windows-64-vs2017-test
  expansions:
    libmongocrypt_os: "windows-test"
  tasks:
  - name: ".sys"
  - name: ".compile"
